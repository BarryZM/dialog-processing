%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 738 265
%%HiResBoundingBox: 0 0 737.5 264.5
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (repo_diagram)
%%Creator: (PowerPoint: cgpdftops CUPS filter)
%%CreationDate: (Friday, July 26 2019 16:47:56 JST)
%%For: (Tianyu Zhao)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
-37 377 translate
-90 rotate
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
userdict/dscInfo 5 dict dup begin
/Title(repo_diagram)def
/Creator(PowerPoint: cgpdftops CUPS filter)def
/CreationDate(Friday, July 26 2019 16:47:56 JST)def
/For(Tianyu Zhao)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFeature: *JobPatchFile 1
<</Orientation 0 /NumCopies 1>>setpagedevice true setstrokeadjust 
%%EndFeature
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 
% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
% languagelevel2 ONLY code goes here
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd
/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd
/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy
	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd
/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if
	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict
	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
% end of language level 2 ONLY code
{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *EPCompactFlash False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPFaceUpTrayUnit False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPTrayUnit None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPConfidentialJob False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OutputBin None
	<</OutputFaceUp false>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
<</PageSize [595 842]>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPDensity DMedium
	<</DeviceRenderingInfo <</Type 29 /Density 3>> >>
	setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType Plain
mark {
	<</MediaType (Plain)>> setpagedevice
	} stopped cleartomark
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<</Collate true>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Duplex None
<</Duplex false>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPRITech True
	mark {
	<< /PostRenderingEnhanceDetails <</Type 43 /REValue 1>> >> setpagedevice
	}stopped cleartomark
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600dpi
mark {
	<</HWResolution [600.0 600.0]>> setpagedevice
	} stopped cleartomark
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPToner False
	mark {
		<< /PostRenderingEnhanceDetails <</Type 43 /TonerSaver 0>> >> setpagedevice
	}stopped cleartomark
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPRotate90Degrees Off
            <</PageFeedEdge true >> setpagedevice
%%EndFeature
} stopped cleartomark
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
595.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: IQIMZW+HelveticaNeue
%!FontType1-1.0: IQIMZW+HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /IQIMZW+HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /r put
dup 34 /a put
dup 35 /w put
dup 36 /space put
dup 37 /d put
dup 38 /t put
dup 39 /o put
dup 40 /c put
dup 41 /u put
dup 42 /n put
dup 43 /s put
dup 44 /e put
dup 45 /J put
dup 46 /S put
dup 47 /O put
dup 48 /N put
dup 49 /k put
dup 50 /i put
dup 51 /z put
dup 52 /m put
dup 53 /l put
dup 54 /f put
dup 55 /parenleft put
dup 56 /parenright put
dup 57 /p put
dup 58 /y put
dup 59 /h put
dup 60 /b put
dup 61 /j put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


0ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E02851C3C5E41415E3C1C1C3C5E41415E3C1C5F2B5680555580562B2B5680555580562B0165366954333354693636695433335469364987683D3D6887494987683E3E6887000000010025FFF0026302DB0039008DBA001E001F00032BB8001E10BA0029001400032BB8002910B8001E10B8000BDC410500DA001400EA001400025D411B0009001400190014002900140039001400490014005900140069001400790014008900140099001400A9001400B9001400C90014000D5DB80032DCB8002910B8003BDC00BA0019002400032BB8001910BA0006003700032BB8000610303101332E0323220E0215141E0615140E0223222E023523141E0233323E0235342E0635343E0233321601EB5A0229475E37315D492C2741525552412720344120284C39235A2F516B3C31635033274152555241271B2D3A1E4A5F01F93B55381A19334F363141291913121D2E2527321D0C142A412D415F3D1E1733513935462E1B14111A2921232F1C0C4500000000020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007002E0017002E0027002E0037002E0047002E0057002E0067002E0077002E00085D41050086002E0096002E00025DBA003000020025111239BA003100020025111239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C2345382207140B0F8A1034393A2E1D111B24142A3C2612020D252A2A25102237272C3823120607070D19181C2212062939304229120A1F382DFEF61E1C05C70C0B0709142520151D1208172329




021900240128000C022C004000DE004500DEFFF30207004500DE004503550040022C0040023E002402510043014D003D01F4001F013B0009022C004002F6001101F4000801E00016000000480048009200DE0116015601F6028A0394042C049E053C05A405F00642066C06AA06DC06F6079007D808780910093E09E20A340A840ABE0B280B4C000000010000001E0096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 30 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/J 4 def
/N 5 def
/O 6 def
/S 7 def
/a 8 def
/b 9 def
/c 10 def
/d 11 def
/e 12 def
/f 13 def
/h 14 def
/i 15 def
/j 16 def
/k 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/w 27 def
/y 28 def
/z 29 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9311B6521168F61DA8AF511CECA1903976E43EB7D7A7D6F1C6A6D8D64AD52497EBF90286A657B682F4A2DBEAE1A835F549D04E2081D2F4FDE8859C3432DED1D0FA213BE78253B7FAC8D2E3B0E3E77CC94322BF17AE4ED9090EB2BFD926C4017B7E004A936FC9FA6FE945C599B2142CDFA0E1361AAC8C762AE52F5EEE5F1870A5388830BE03D6C01253DEF30DCFE502A10DC6A1245C8C8C845CB97D66106DDABF2431243EA4D9C02E753869034143537A94524DBC1661C07959826368AC81FAF4D4ED0A4D95EAF144028495ECFDAD2CAF35F805413C2D99B306463CC434B66AC0821754D461B20027E87960DAD868F85E3FB4B4A73FAF7E9B544F320984508B5076E0EE7329C353D5B78A253EBE53ACE037AAE6C369728E2D708AAC8997CA752442803AF582368FEA07E09CCE42BEE85EE9FC0E9F694E3C74777D040D68D965AFF27937A32B2F389FE749AB6B13DFC5893F0FA99FE6ADC6C8B892E4092648A454B5F964996A9605353CE901BBE60E1A357E3C2BB8F3F312BC7AAAB5CA181FBA2DB6B8DE3EDE98BD4D5CE1A17BACC1657CB592393BE0F09922BE201CCA54A88BEE5CE334C1874A62F31EDECEDE285E7D153A9085E4594C92BA3976073D0C50615E7E3211DE06AB280053671D32747FA45E33C5161C2A1E1A42AAF3FE4D1D98A2DFC5DBDC90E3204758132F088CAA3B9A0FAC3BCA8410B9D0DB5A24E3F01455C273241F09AE34EF266C09894601B8E1938EFDC9BEE6F990296D13728DC3B09E5ABB78

DEA8F4CEADCF47107EF6164F1EFC8BCB719BF571373481B37C77AAB2C3708B857FAFC07D67945229C78F581419A6FA8341B869CE5CA5368F89F4F3EF17B18326BA14B739334BB156E2D690E6B8E0E69E3EFFD00DDE3E29875C803E71F63C2A58B5260F74EB787F7CC2B5308FEDD85133D8AC40D694E11ADF5D490FC474DA3EDB542DB8838EE89730D552ECAB87F624EEA0C9D1F1C0B01AA6E157ECF7BA2B58431795B6F3BBE71E874A58C70B386AF6295154F957FBFAF212DBB41BBAB654B8EC3A8A0B0906622F45EB922F4BA311FC85A82415C70F594593669C59F69B5ACC5F36888920B348E0C8A9928A7C07CF8E83320481950A06444F2A359DF6B59F72F0FA2D0671F3A9BA0258E2E9F26E0ECEA1FA71AC9E39B43FFC80AEA1243BBFC51DF1B7A9013BA890853A1956BEA2FAFDA45C419234DCBC06A0F8629297AACA9FF0D52536127049EADBCA274E3EF98CC0B14A18A0B9A938C4AF0FE5426003E3538B3E56B4ECB28C7E8BFE0D94DA0D962501369ACA969803E6D0DC8EAB05D4B7959B1D71519192962097B5037226E392FC4FE892FD3BE53962E83DBAC50862D155E2B9A041F3CCE16AE1ABAF55085A16BD722CB83F33E604DBB7939209832511566A6BA4A09FF93B3DE9AEB4CC146E51E6B4A6C782EDD4CD36F909F9827085BA2177D6FD861D8835B1969CB420CC894A5012835C3C29027D4A9BC3EFFF4D4F5CCA69B76258AD03AC0DC62165DFDAEC6A29F8347573131173515FBD2B66543D65F40697F7028ED14B150046BD7573B9A4BA36A4AD726AD68C1348263BF5B25FDA2C4F847340A07886E2907CB4AD34F20762FD3525E93B33E9426A0EA009CA813CAA16798C216E9134256315B04B5495C9CF9E5531A8B74BC8DAF8369D43EBC6FE7E66C18F0A60D154071D4BECBCC662A67C39BC496139DA894F48AE1E49A51FA290B3306A180D3920E37CFD343A30DA2CE193FC122A3C852DB8E3E1900BFE22B9FB207030D4E917B8ECBDE8EB305EAF2F3FEB942C60F2837D825F4159FFD6BA9A77F6F83A21C118F23341987B22BCD81D8B5C345691587EA47CE86679EB8F3838C72DA7E11D57C8886C8FC63C7EE57D4EFD0973D00D04986D0F7861EBD02AD53D44FBDB9E3B12F37E339E3EA7B7F70F57E4C8BAFFA6EDFF53E046D762ECDDF5A820C5B5A4318B1B7AB8247C538DEE3CA92C6674502AE09FFD9DC2B500F43EDFC2F412217E9D0E31E290A26658B6D72DFD3A5135270C5A308EB17CE60E339B560AB99859E8065F67EBCDDEF625E98DAEC531C08217907594CFCA5266C3E60DF765A3D9CF687A5F4C879E3F4FD8A855421BB763C18304AB9D0E3B701CD6550714BB2C2BFF6BB0DEA2E63E723B7CFD599BDBDC9DE805F55F4B5004CFEF06006484118E61AE948434BD11E34CC50C15BAA8ABC40B64CC3F9F4ABA8936BFE79DF258F71E88
C630ECE6886729B175183C64A912AAFB348FAE09F6144E01A0916F0CF72F22BEA8227BA0EBD6294AC3318FF1443E0E076599C551F600B1F8D2991CE65428F175DAD5CFCDF4F9ECA7FEA3645C12DBE1EAAC83E466B4ECD7F03EBACE92C247FBACDC99734A5CF95190E4FF591752233C065ED1F0DEE0EFD9E462A584BB1D88B483E3C44AD036F9F12BE4E5177E90800C95BC7C20E76F3EE8BB8BCEED4E377813A2B96E69D8404B8663CC300B460EC499AB794A3F1F98BBDADE7AA71FF2BB63FB7585DCEF6FFDF504E7D1993CCD48358E3EB179E6A92031D0A73AD3BBB95D52BF5D18C5FC57CBE062B87159FDDE9C67419DBE0E6ADF9C33D10C532DE03DEA834024726B7F24A5C2834524EE807295623B27C182B16B9CCFB49FF4819EEC03B6F3325B627FB26F46DDA90A546CB1ECB9B1B6B125C7F34F2B30D81AC1459F6530484234AF3AE96712D9C2C675BB6D7C75EDF72CA55D562B823565D773327EFB321EEAAB08C5AC277562F76BF37933E74976F4F0055647C1411C2C166D1FC4A5C0EAC3FF17D56ECAC74C639F708A38FBC8813B479ECCD90CE09DCB02D9A95E6AD56208830A43040A7E56990E92C7793424DA47B3D72BA3732262CCAE5D4241F9327AA0B05DDE390411A9FFE92FFCCE1F2BC5529B75A7EE7A564715F1661BCFD1F8B40F7A285E25317AC7AD58AB499F3B24C556D780427D82FF588FD150637E4FA7690F7DBE55E564EAB79C4050043FC2845AF98BC4698C7D8F6E23086F21B67DC01805AD02A52220EFBA013AB488153636EDA98AD13BE4622418306E63EACB0FF00FA5ED2F18AB4FE26B581B4F15614DDB145579A3BC78FF2218849E11B9EF45AE712DC60B20D06E9B380D494C5A26B56B12F81D709918D43F940A67CF3A8257859F2FAB3A61E23206831A641C67E76F201167267474645C84211ED6AC24B38024BD3B06504FBAC067951CE895ECB746E67F783B8A3E9D35BEF5DC1962D213DF8A1C26325C52F6D9CFBA2BE9895891FE38C7BD043E70746CCFA23471611DC43B156277A6F1B149E11BCA5883D450EDEAA260C77FCF1BA7CF91F21ADC18C28EEF8FEA7A9BF68ECB7EE06D6C53C8C0AFED182E5A775296ED7CC0E190C861DFAFD7F5652CF6C0B4453E3324E59FAA0E0F2345A7A0B90FD1B392085CCEDF4D171060CBE8B0FED95512B1AD384B6931E0148E8744619631275F615D3E6FDEE7FDA132A6A6313241BF615ECE229A501744D0BAB6C61A56651E5D06BEC0F340B7D5AA8AE23FAE7043C64323F9299538170DB79BC8FACC5F65B9DA67F6169ABD7474FB3D200B3E9B38BDECC9C487E236D5512678FEED20559E3D9636CBA60C45BD9DD8522CA5971F64F95AF148183C044E8AAE812B5B79673E0404E54565097174B17C095A2CBF70450975D8882452ADFCA684499C0A93A2C38503BCECD10CDEEFA067A3E2B7F4

D2805DBDDFAF1A9184277D0186C6F8332EFD34F0028BA5A9ABBE4A14E7309DA7397208C925BC0CFBA8E4CD38E730F1BB7E05298101DE02D325566192906B078867489639373E5CDD31729AF27DF3D6347027BB94CC4840B7D4BABDBC1143A200823FFEE630E5C25C4E7A2E545DBC23B2E604A5A92C3C56F4020A6578D1B71423018FF1C2B0C3E566D5CE97283D6315FF91F5E98A006E123BB20862F71765060843D29169A0D1371A7844E9AD9F2D0F97271027BAD9E281421CA37F81C21FB972EA4B373F94C5E066950706469A6890F54441CA1C004393A9B1AC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/IQIMZW+HelveticaNeue cguidfix
/F1.1/IQIMZW+HelveticaNeue renmfont
%RBIBeginFontSubset: IQIMZW+Consolas
%!FontType1-1.0: IQIMZW+Consolas 1.0000.5.3200
14 dict begin/FontName /IQIMZW+Consolas def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid4 put
dup 34 /gid12 put
dup 35 /gid14 put
dup 36 /gid13 put
dup 37 /gid2 put
dup 38 /gid24 put
dup 39 /gid27 put
dup 40 /gid17 put
dup 41 /gid15 put
dup 42 /gid29 put
dup 43 /gid11 put
dup 44 /gid10 put
dup 45 /gid6 put
dup 46 /gid28 put
dup 47 /gid3 put
dup 48 /gid7 put
dup 49 /gid9 put
dup 50 /gid5 put
dup 51 /gid16 put
dup 52 /gid8 put
dup 53 /gid22 put
dup 54 /gid19 put
dup 55 /gid20 put
dup 56 /gid25 put
dup 57 /gid21 put
dup 58 /gid1 put
dup 59 /gid18 put
dup 60 /gid23 put
dup 61 /gid26 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -885 1 index div -619 2 index div 1387 3 index div 2071 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 30 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
/gid24 24 def
/gid25 25 def
/gid26 26 def
/gid27 27 def
/gid28 28 def
/gid29 29 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-885 -619 1387 2071}def
/UniqueID 4254286 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9311B6521168F61DA8AF511CECA1903976E43EB7D7A7D6F1C6A6D8D64B878CF298CE668E1F6CB8314A6AD11DA286B5792A75273C4ABA660237374324B5C6272B500D5E884687BC9C39ED014ADF12A4ED853191ABBEF74103F385F8F045975001E3A00F382B1074761F027E0FD89EDBDBA66FA325D87954183FBAB2144C48E4FAE386091FAFE74A7AF6F46E3EC1EBA9101A13BE866EEC268AC79E4852F7AD3D652E27CA4C32DBFF952C971B0B206D685F7D5BE0DB232A935D299DEAF97D9EF05574AC6C506417D3A907C19BEAD71626C6FD2A26BC262DBEB8BCAAF15CE6BDC017D61DABC03F6AFB1F28B5F9664D083BE112AF5B98D4DDDA413863C2C55F34A8BD9D0CD1AB822C2AE331147336832EA59BE2F7C35D303A88C902DA6292F73C46C78C8C286394F3482C9744A77C0C7A465652E0F913040DC366E382C902C7115AF3F4DEB85773D03130FAF018B62DE4A23D01FC5E6DCF6D38F36E677BA0698D47620E5803C044309437A50DA092FEA0EE14A8800EF15EF64BED9E0FDE7CC673CED9542294700110EA7B26367A703CB33F1C843554682F839FC03643D0F2C0F844B3E9B89A12E7EBE8E01997E66DB4F5CAB150E712DA3D2B05F1DACE55129BC9E5A0E385E1E6311E1506E16BD4297962BCDB3269E830803B76E90D637B5CA7B29EF0D40F8AA7C17349ACC158F2791083CACE7F587F1009BE462B42EB84B0F92990074BFA21B9BB251A32BC1BF2CBA112EE36CC3BED9E7D99B987D9FA491D0ACEAF460C
5AA1B97A373C7BCDCB313217F285EEDA3BD84B4AE968DE17313065021D31E06E7DA31834E7A15DB6654C813B659FDEDAA6248298A690FA17B687F7C133BEFBB6F116BB8005AB0732420648D21344C49AF50C8A2E3E4986B2069DE4A44CB7D0E9A3C9AFBD6AD689E38F8A5D39DA38A3D4126488CFE50B790C8783D2B375B73DA9694913337E1A114DBF6C52120A1808FB1939A930D992D48674ED98AA2FD81A5557968CFF76B83BAB43FB3188D2C017744E95B0F36856C805F82E95789B59341A0DC3A2B63866C181684BBD24B541AEC0DE152B0919B3D50858355554C5491C540AB28F24312E428FD6DCECBCA793EB3F7A653010A73EEAE768B0A1D2136F31003DDB5CA6153E0A480167572A588B9D9D0C857CBB84546154ED77F968FD8735566C1BD20B9902015C38A044B7356973AA04401529F85D8C1BF71AE3709F40791606C1BD4D24D6D059419F96FF2001C105DAADA9D9C782207869027F5668BC0FA740F56B0C5B2D283CD24BB5F4495E33612EAD577E55F4E2FA9ED891E49931CDE6A427693123E6B52EEEE5AA65D3CDEE1D933841B4B7F8294C78E8BB9B6645EA1BF3EA8EDD03FD9911A893BB36722D7AC811938A214AC9BC7B4BFE69E0C637485A83E85DDC9F229990689FA2246544BDD17BF6CE94D5731BC3093633304F89AEA28EA11FFB6F315FD3C38E47FD56772A94A499E9D0B82A5AF86CFFECC6DA5DC759DFE6F106B6C80DF76AD1E710CE4A00071962FB485E3C91C4A8BFB28D36F5275F838A7FEC06391E11D79F5F9400ABA3CAAF4B321E8E33EA1606BBFC238E99564D27DB34A5474C6B2FDF4AB7A33963E4FAA558D144C25A488F008A36E9279F9DCF6139FC2C0E112E996813565DA161AC57EE5B615154F1C9CEC744D6092AC99E64A83F6DFE29894C77A58B0016E557FB6986D5B30306124335D834D6D5E69105CFAE608A73D75BEF00548CECD9B9D7B52922980D997DD0C623B97A1C4C01E6E513194E4550A6F0D315D811423C8BA1CA9174FFC4487C80EE8B4CB77A47D869FE1ECEABFCC2740892A7412C6722785A62F5C90D1556C7A23F3DD38F5E594562213F3E9ACE014DC8118B61A93252BB2D868F8D63BAB618DE6C48B2562F39376642E0DBA0F4F9E4799D8D112B4C4C452B0879F22E380CF14BA72E21DC1583735644891BDF9273F66D2DF292498C50C57B1F21B7CD522B4FDF237E483C7993ACE91B739AB1B92DB8C2C8D147D40364FADDF53AA0F3D743539061041EF8C44AE6E8DC46AE7E7B8D3BC7719387ADBCBD6FAED64D3CD1426019B14F2DF9DB13B62EC972D90ECF89484919769A5258EE3A156719254DE21501E47B4E96B76D512D3929903A884EB7559E7FF832F14196560537BA48566AF62AA73958065938312D6589906528FDBF23354FCB98E4FC4443F6EAE3AF30CF64F09FF02F9034422BE4ED6A215A


2818F867D8A64CA251EA819B54FF93DAE31C383BE2F15F95FF99F86D091C7F4DD8A3CB09F5107774E57BCA9F5EC39421773A68D2BD52D5EB7F46C48BE15F10B02C02C093694BCA25714C3B1101D276CAD784983B532251F3B1795FB51785C89477253DBBB38B89BBC9226AFCEDC9261773069618AE2DB2B2CD42E7F6187678CACB24D0ABB4E69771CEE9FB32B7B0E593DAEFB7C538FD3DB1F810F7036302CDCCFF58326801021D5FD3F1E49FCDCDEB998F9EA7DD1643BEFF21BC22EE9681C73CA94D1BC445BD38B327706E7F9D5B26B37086BDD41AAD6DB18B6150FD88BC0F905BC9570BB03852D724F38739BDA47585B8BCE9E075DB5125DA0A9F4AE9F7C159DEFE26DCFB2CF5F8CCA73CD69AC70D6FD918A154594D0984BB8EC9EAA397E85CDE23C896E19764CAD5B6B82353DB764865FB91FC1755EE504CF4494ABF5B6DDA1C1FC4217F9413AD31CD3639EB611625FAF43388AB648DD99A0A744989015A5DB32C942A1E6E4DAE4003AB172B0554C6D578ED4C96424019F6AA5E516086C1E71297ABB4D9560B3E9FD5D6979AE8044E07B0DF70F938212564B7D9C3B6F0154482E7E9A68D49B8910C7AFFCE575E143ECBF0026371DB29B3CD5D3411416165C66A4B7588B221E0C0F65C4F192274F6D65DCE507452EA05C3E7105C19B5BE55CD3687FE6DCC489264574413EA1B710EF8D35AD7BF8F20CEB82F075D62BD28A7B2682D2A0E27CC041D06EB73267452A87810643414D427657C6E48985A57980E8B6195B11E897DE1918A01CF9EECE7574874A7F0860E4C0DA98058C23535F418AB8E5F963AC24DC5E3073090AFAF6728A00B3658B3C13B5A0D8719D838ECF3DF7DD619D0C9963BDD2D378F9C73D7268CADFE3599B519A0E3ED58C0A4BA1CFB898836EE8A4D5EE69C5CDDF1151831451A7F22BF7D24E2AE94864E763060C4F0FAA4CE91EF4384A00F35DCA6DB09D51AAF7F819FD43E3164C6635768B37A16135A7E41B0A034278D603AA717D9FA8BD27C575C3A5DE6EB20386DC1B15E8E7DFB6AEB1745298E7941F0C5A88E7C7B69CE6C78AFE8140290E8F26651D2F4D6C4886C271F33DFBFCDD7D2AB2E6F9C84716E30735F0645D7873B3EFC54ACB892F9C49A6D768E94111C29F48A6E7E91EA6AF8D0487A803852D48A4389ED23A163B9180C40100307D960EEF4D89B7657E808971D39520CD0D408AC91DE7933A34FFD5B10D9C7B57D37C010C7EBF47681AD83437D603B4DE40410F25D437752CBD71D5DD97610F045E554CD32426829D6B80C3B25B892AD2593A836AEDA29D02EE3059405689DDA3052ECACF12A6270BB3A3B4974BD5721D449B7B14F7F0E0679C3DB6DE0D2F81D37F86176E76947596780DE38C6B124B8025CDCE45B69EF392F70603438D247BEBE5BFDC3A5C40DB7DB66586AE71605E7693866D07D878B05F9C03B99244A
9D2C9F67FB80083A2CE12FBE719BCFB000F53835643C044E0C88E86531EA0160826FE9D70242F8580596ECB15E9C74D17651527142C9D64090955707B6574C21CDB405A84D31CC3302413EE64A5DEA403765B43DDC135EBB2AFF7DDCA88D7EBE212DD1A0DAC2C36AC3B3B9B4622F440BF32C41946ACF0967B8B2A60437E7189CA33503D6BC5568DDAB60E93877D616AF7DDD4C12A1995EDEBAD25D262C357649E2FF42069CB51C6D436AEC3BD72772DE76D6E63063A84C707388E462D4D0D8D8B1927CD237BBE323C6D6221C8D5E173EFD37F0CDA5745E981DF8BBEF064F73B26FB22E4AEF6C3B346BFDBC79BEFBF5F653117AC90CA00BA30B8C049FC94A29DF78AE0BD0FC2E6A6C987EEBB40B9B4B7F371AFF049814BB1EB4C5AA47F13FEF22EF02962775BC7319F7719C842597A02A66D2CAE64EB16AD3DC44A374015C153C32AE4FC7454C1A13BA8CC89232593E2A792357BA0162EA6D04AE59917DF6C6B2C7CAEA42932CB4044F03375D6F902F991AEB0796D33839CA11FA587E48A85CBB62FAF2F68BE920839EA736D703F6E10EB03F3A4C8BDC0977B1DF2A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/IQIMZW+Consolas cguidfix
/F2.1/IQIMZW+Consolas renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
24.573681 520.62311 m
817.30463 520.62311 l
817.30463 74.808258 l
24.573681 74.808258 l
h
W
24.573681 74.779732 792.76898 445.84341 rc
24.573681 520.62311 m
817.30463 520.62311 l
817.30463 74.808258 l
24.573681 74.808258 l
h
f
Q
q
24.573681 74.779732 792.76898 445.84341 rc
24.573681 520.62311 m
817.34271 520.62311 l
817.34271 74.779732 l
24.573681 74.779732 l
h
f
12700 w
8 M
[
38100
12700
] 0 d
0 0 0 sc
0.00006502 0 0 -0.00006501 415.08279 403.33829 cm
0 0 m
2213887 0 l
2213887 2842055 l
0 2842055 l
h
S
0.00006502 0 0 -0.00006501 236.9942 308.07791 cm
0 0 m
2565571 0 l
2565571 1376752 l
0 1376752 l
h
S
0.00006502 0 0 -0.00006501 236.99429 403.3382 cm
0 0 m
2565571 0 l
2565571 1280986 l
0 1280986 l
h
S
0.00006502 0 0 -0.00006501 75.193069 403.3382 cm
0 0 m
2281880 0 l
2281880 2842055 l
0 2842055 l
h
S
1 1 1 sc
CM
38.232948 319.39111 m
116.1707 319.39111 l
116.1707 297.70139 l
38.232948 297.70139 l
h
f
38100 w
[] 0 d
0 0 0 sc
0.00006502 0 0 -0.00006501 38.232948 319.39111 cm
0 0 m
1198606 0 l
1198606 333632 l
0 333632 l
h
S
0.057067961 0 0 0.057056539 48.402039 -142.7027 cm
/F1.1[ 262.5 0 0 262.5 0 0]sf
0 7812 m
(!"#$%"&")[ 86.835000 139.335000 197.085000 72.397500 153.772500 139.335000 81.322500 0.000000 ] xS
1 1 1 sc
CM
167.0578 352.86292 m
280.08099 352.86292 l
280.08099 329.8345 l
167.0578 329.8345 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 167.0578 352.86292 cm
0 0 m
1738185 0 l
1738185 354225 l
0 354225 l
h
S
0.057067961 0 0 0.057056539 186.0264 -109.9457 cm
0 7812 m
(#'!%$\('\)*&)[ 197.163750 150.176250 82.188750 153.851250 72.476250 139.413750 150.176250 144.663750 144.663750 0.000000 ] xS
1 1 1 sc
CM
167.0578 286.72281 m
280.08099 286.72281 l
280.08099 263.69431 l
167.0578 263.69431 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 167.0578 286.72281 cm
0 0 m
1738185 0 l
1738185 354225 l
0 354225 l
h
S
0.057067961 0 0 0.057056539 177.16969 -176.0304 cm
0 7812 m
(%"&"+,&$-./0)[ 153.746250 139.308750 81.296250 139.308750 130.121250 139.308750 81.296250 72.371250 135.633750 168.183750 197.058750 0.000000 ] xS
1 1 1 sc
CM
363.91089 352.86292 m
455.64191 352.86292 l
467.15851 341.3486 l
467.15851 341.3486 l
455.64191 329.8345 l
363.91089 329.8345 l
352.39441 341.3486 l
352.39441 341.3486 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 352.39441 352.86292 cm
177113.3 0 m
1587845 0 l
1764956 177113.5 l
1764956 177113.5 l
1587845 354225 l
177113.3 354225 l
0 177113.5 l
0 177113.5 l
h
S
0.057067961 0 0 0.057056539 379.5314 -109.9457 cm
0 7812 m
(&'1,*23,!)[ 81.401250 150.176250 135.738750 139.151250 144.663750 57.776250 124.713750 139.151250 0.000000 ] xS
1 1 1 sc
CM
363.91089 286.3212 m
455.64191 286.3212 l
467.15851 274.80701 l
467.15851 274.80701 l
455.64191 263.29279 l
363.91089 263.29279 l
352.39441 274.80701 l
352.39441 274.80701 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 352.39441 286.3212 cm
177113.3 0 m
1587845 0 l
1764956 177113.5 l
1764956 177113.5 l
1587845 354225 l
177113.3 354225 l
0 177113.5 l
0 177113.5 l
h
S
0.057067961 0 0 0.057056539 370.63351 -176.42979 cm
0 7812 m
(%"&"$+'\)!\(,)[ 153.746250 139.308750 81.296250 139.308750 72.371250 130.121250 150.071250 144.821250 82.083750 139.308750 0.000000 ] xS
1 1 1 sc
CM
523.26819 320.06049 m
614.99921 320.06049 l
626.5155 308.5462 l
626.5155 308.5462 l
614.99921 297.0321 l
523.26819 297.0321 l
511.75159 308.5462 l
511.75159 308.5462 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 511.75159 320.06049 cm
177113.3 0 m
1587845 0 l
1764956 177113.5 l
1764956 177113.5 l
1587845 354225 l
177113.3 354225 l
0 177113.5 l
0 177113.5 l
h
S
0.057067961 0 0 0.057056539 548.48871 -142.7027 cm
0 7812 m
(4'%,5)[ 222.495000 150.045000 153.720000 139.282500 0.000000 ] xS
CM
116.842 307.5054 m
162.52361 336.9523 l
161.18111 339.034 l
115.4995 309.5871 l
h
162.825 334.19949 m
167.0578 341.3486 l
158.7977 340.4447 l
h
f
116.8497 309.58209 m
162.5563 279.63821 l
161.1985 277.56641 l
115.4918 307.51041 l
h
162.87801 282.3887 m
167.0578 275.20859 l
158.8046 276.17349 l
h
f
280.0809 342.5871 m
289.9906 342.5871 l
289.9906 340.1102 l
280.0809 340.1102 l
h
297.42291 342.5871 m
307.33261 342.5871 l
307.33261 340.11011 l
297.42291 340.1102 l
h
314.76471 342.5871 m
324.67429 342.58701 l
324.67429 340.11011 l
314.76471 340.11011 l
h
332.10651 342.58701 m
342.01611 342.58701 l
342.01611 340.11011 l
332.10651 340.11011 l
h
344.96219 345.0639 m
352.39441 341.3486 l
344.96219 337.63321 l
h
f
280.0878 276.4469 m
346.20801 276.0798 l
346.19421 273.60309 l
280.07401 273.97021 l
h
344.98291 278.56369 m
352.39441 274.80701 l
344.9418 271.133 l
h
f
411.01501 329.8345 m
411.01529 292.51349 l
408.53781 292.51349 l
408.53781 329.8345 l
h
413.49249 293.75201 m
409.7764 286.3212 l
406.06039 293.75201 l
h
f
0.057067961 0 0 0.057056539 81.13884 -54.646832 cm
/F2.1[ 145.8333 0 0 145.8333 0 0]sf
0 7812 m
(!"#$"#%)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 112.9322 -54.646832 cm
0 7812 m
(&')[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 122.016 -54.646832 cm
0 7812 m
(!"#$\(\)*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 171.9769 -54.646832 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 81.13884 -64.405449 cm
0 7812 m
(/\(012*')[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 112.9322 -64.405449 cm
0 7812 m
(3%\)4*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 153.8093 -64.405449 cm
0 7812 m
(.*)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 162.8932 -64.405449 cm
0 7812 m
(2%3%\)-35$6)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 242.94 -54.646832 cm
0 7812 m
(3"4-+07%30"+)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 297.4429 -54.646832 cm
0 7812 m
(&)s
0.057067961 0 0 0.057056539 242.94 -64.405449 cm
0 7812 m
(')s
0.057067961 0 0 0.057056539 247.48199 -64.405449 cm
0 7812 m
(3"4-+07-#*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 311.0686 -64.405449 cm
0 7812 m
(.*)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 320.1524 -64.405449 cm
0 7812 m
(3"4-+07-#5$6)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 242.94 -219.5732 cm
0 7812 m
(3%\)4\))[ 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 265.6496 -219.5732 cm
0 7812 m
(&')[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 274.7334 -219.5732 cm
0 7812 m
(3%\)4*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 315.6105 -219.5732 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 324.69431 -219.5732 cm
0 7812 m
(2%3%*\)"\(#!-5$6)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 468.9426 -212.4968 cm
0 7812 m
(3%\)4\))[ 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 491.6521 -212.4968 cm
0 7812 m
(&')[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 500.73611 -212.4968 cm
0 7812 m
(3%\)4*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 541.61322 -212.4968 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 468.9426 -222.2554 cm
0 7812 m
(8)s
0.057067961 0 0 0.057056539 473.4845 -222.2554 cm
0 7812 m
(3#%0+9:)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 505.2778 -222.2554 cm
0 7812 m
(-;%1)[ 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 523.44562 -222.2554 cm
0 7812 m
(9:<=5)[ 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 546.15509 -222.2554 cm
0 7812 m
($6)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 468.9426 -188.47121 cm
0 7812 m
(,"2-1)[ 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 491.6521 -188.47121 cm
0 7812 m
(&')[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 500.7359 -188.47121 cm
0 7812 m
(3%\)4*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 541.61292 -188.47121 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 468.9426 -198.1727 cm
0 7812 m
(')s
0.057067961 0 0 0.057056539 473.4845 -198.1727 cm
0 7812 m
(,"2-1*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 518.90338 -198.1727 cm
0 7812 m
(.5)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 527.98718 -198.1727 cm
0 7812 m
($6)[ 79.581232 0.000000 ] xS
1 1 1 sc
CM
626.5155 481.12671 m
671.30127 481.12671 l
671.30127 468.4072 l
626.5155 468.4072 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 626.5155 481.12671 cm
0 0 m
688761 0 l
688761 195652 l
0 195652 l
h
S
1 1 1 sc
CM
632.57501 456.42459 m
665.24213 456.42459 l
671.30127 450.36639 l
671.30127 450.36639 l
665.24213 444.3082 l
632.57501 444.3082 l
626.5155 450.36639 l
626.5155 450.36639 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 626.5155 456.42459 cm
93188.367 0 m
595573.38 0 l
688761 93188.383 l
688761 93188.383 l
595573.38 186376 l
93188.367 186376 l
0 93188.383 l
0 93188.383 l
h
S
0.057067961 0 0 0.057056539 693.48877 23.59334 cm
/F1.1[ 262.5 0 0 262.5 0 0]sf
0 7812 m
(%"&"$625,7+8)[ 153.746250 139.308750 81.296250 139.308750 72.371250 77.883750 57.933750 57.933750 139.308750 66.858750 130.121250 0.000000 ] xS
0.057067961 0 0 0.057056539 683.3595 0.081337951 cm
0 7812 m
(9:&;'*$'<=,\(&)[ 153.746250 130.121250 81.296250 144.821250 150.071250 144.821250 72.371250 150.071250 153.746250 57.933750 139.308750 139.308750 0.000000 ] xS
CM
467.8992 342.34119 m
507.52881 312.7738 l
506.04721 310.7887 l
466.4176 340.35611 l
h
508.0177 315.49951 m
511.75159 308.07779 l
503.5726 309.54419 l
h
f
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
