%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (repo_diagram)
%%Creator: (PowerPoint: cgpdftops CUPS filter)
%%CreationDate: (Friday, July 26 2019 16:48:08 JST)
%%For: (Tianyu Zhao)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(repo_diagram)def
/Creator(PowerPoint: cgpdftops CUPS filter)def
/CreationDate(Friday, July 26 2019 16:48:08 JST)def
/For(Tianyu Zhao)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFeature: *JobPatchFile 1
<</Orientation 0 /NumCopies 1>>setpagedevice true setstrokeadjust 
%%EndFeature
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *EPCompactFlash False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPFaceUpTrayUnit False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPTrayUnit None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPConfidentialJob False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OutputBin None

	<</OutputFaceUp false>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
<</PageSize [595 842]>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPDensity DMedium

	<</DeviceRenderingInfo <</Type 29 /Density 3>> >>
	setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType Plain
mark {
	<</MediaType (Plain)>> setpagedevice
	} stopped cleartomark
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<</Collate true>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Duplex None
<</Duplex false>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPRITech True

	mark {
	<< /PostRenderingEnhanceDetails <</Type 43 /REValue 1>> >> setpagedevice
	}stopped cleartomark
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600dpi
mark {
	<</HWResolution [600.0 600.0]>> setpagedevice
	} stopped cleartomark
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPToner False

	mark {
		<< /PostRenderingEnhanceDetails <</Type 43 /TonerSaver 0>> >> setpagedevice
	}stopped cleartomark
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *EPRotate90Degrees Off

            <</PageFeedEdge true >> setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
595.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: MADVFE+HelveticaNeue
%!FontType1-1.0: MADVFE+HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /MADVFE+HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /r put
dup 34 /a put
dup 35 /w put
dup 36 /space put
dup 37 /d put
dup 38 /t put
dup 39 /o put
dup 40 /c put
dup 41 /u put
dup 42 /n put
dup 43 /s put
dup 44 /e put
dup 45 /J put
dup 46 /S put
dup 47 /O put
dup 48 /N put
dup 49 /k put
dup 50 /i put
dup 51 /z put
dup 52 /m put
dup 53 /l put
dup 54 /p put
dup 55 /b put
dup 56 /g put
dup 57 /x put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC0000149C686561640000000000001978000000366868656100000000000019B000000024686D747800000000000019D4000000686C6F63610000000000001A3C000000366D6178700000000000001A7400000020707265700000000000001A940000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546






00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/space 1 def
/J 2 def
/N 3 def
/O 4 def
/S 5 def
/a 6 def
/b 7 def
/c 8 def
/d 9 def
/e 10 def
/g 11 def
/i 12 def
/k 13 def
/l 14 def
/m 15 def
/n 16 def
/o 17 def
/p 18 def
/r 19 def
/s 20 def
/t 21 def
/u 22 def
/w 23 def
/x 24 def
/z 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9264C9384F249EBFD8DD5BFBB9BE844B0E83BCFE532E688793A86D21BB50B73F1E4CB55B3332FA078523601D7D59E771AAD72B0C3150466C78199AB7245DDDDDB744BE485E1956EC9C8F9F94015171004093B221EFCEA2ED2C5237FD6408A1F600E98635D7DADBEBEB573DFBA1A863B33D178758F88D555B1C248AD8F1A7620BF64F05471E7969FC06445D427DF54BA1CE2EE7AFADC82BCBD923D268AADDEB0148CB22F9F2EC00446F3299AE5C7AE2690C1AD12FDD88ACD0976AABAC82F2BA6EE69DAAF5795BE067719989FA6B38782098358EC6806E162CFC72797D46B5BEE7189E0B081A868BAF53877F8EE4A2CAE9C06DEC97EF634CAB609CFD34E597D3FA39E5FF289E497FA31859BAD8567220E1AE485160DBEC87C268B4F55FB62E962DA9A59D0E69F634D7F8D114EA129D28DC844172AAFC838DAE5EA37757BF4A331F5262EDAD9B30D06A3D0AC17F69807AE9B49B047CA4988075830A4AC686B869BFE9C9A21FBEA1EB317F48E6BAA3429DC6415501B2122D1D309BE9481F89724035ED3590A6A542D94E2EC866A243276D27387C26DB7A9F22BA70CE67E538CA959F8FB26D67BB64FD7544C8C1BC8279605A7685F2711485C9E86BE082033A52826F2C2903281C2C4692F7FE908712FEDC519FD57A434870F3607C33A04FAD12A6D75208216BF500CEFD21F954BFFEED4C84EC4BB82E53D5099B678AA8FFCD3DDE96E294CFE16B8223F123760350BE78181AF53FDB909884199BD6418F46E6626234F1
737ECE8DCF4C4E5C8C949F8EE770A3A676DF1AB1F8690CB7ABC6FAB1DB91B7924D984AFFD07967FC5449DD09DEA371C3CED2042118C67FA513982A513D42D1DBE3977F65C7D98A3430E1FE04434D5D5E7F8D9F38A0243EDF60013D501A26DD6FCC242418F7023B55C270EBE46251EF9880302E67AD59347C127BE6107F0BE525913E748E096FFEC7DA1F7D92868B72D35118C594B622685A1F87E6168445E11069FC761F67CC7A790A96B86F737C835F0B544A32D8222730C797167C8AA00A100B527FC34DAF40A1F6383FB87C9712F40727901A991018D2B0F1776FF406A87AC5D69785068DE47B0221B6ED5ED2B4FD8449C159102114B6E819EC9C50986EF7167C4E2EDA469B0A09821F28A2CF4E0F198D686F749C187C5278D26EF498A55947D71179C9C37BB4432639A35E9D5D0F9A01AC34D1994074E6E76DA6E6F7D49A00929DF86FD685935E9856342E51DF7862DB2D7A70276661092E985FE69E96AF3B67F828296E718825ED637480391A7CCEAED9749463C973E57147A0F42EE01AAFD8D530B3A66BA6100E32953E808CCBA0DB91D6019278D37E0D5A60414CF018F31ABCC5EE64C457CEAB57ADA4325658057E34F1643AFAFC0FBC36E358EB84CF4DDB2D9AE978BB80B3BA164AF60E060C271216A67EB817D17DA753B844560C28BC6398AC200985F2A73E36E49DE64E2D0656EC14F9216887C17F3DCF78C29DB49710393D5B257F4088FD5062065B80BB24A1499BA2906FD7EC83872904465C6FB78C08AFB666B954F49F3799C088E2E68C9A4D98DE897334822A4F90A7E94E454C636F746E9FF65FED829B0F1550422B74D4290011CE0E612C43FEAC21DE2841C301826B355ACAC795ADE4EF84D4196054E397A648A31136BBE0502E8C1F5D4DB95CC1BAA38B5B597EB98AC67C248BE2351A6274A28BE58E66E71DBEDBF37A59BA07E6D188F0EED2453723ACB9B6E1C0C393F556777411227197A6C508E33724774F8ECD233BCFBAFCDA98C52957D90778E0B736CABB3EDA64438587DA0F347692DA3F6CA5A2E09F7A665DBC14956A35FD77C3AA1895FA364591FF5D897C63C760412B484791F309D50C984E8178843EB4FDE57267212855584BC96291F24576C231D6D648F211FA8DDE8DC9385B255D8383C9353AE1419F051FAC342FE9E526F9694E3654A878479AA9A40D1AD81D91FC8812A65112A5ED8FCB7593550AD28B25370A62EC1473EC0AE980A044A0363BE0FFF803319D223E12BD7478A16808B19CC54639D0FC1EF6D2A71E2A3887608BCA8AFD514ADAB39192FE4A38E15EEF8278DFC5534B22B435DA45FDF038614B0185E9966C5E1C112F718CDF38A2E15560C238E979F8DD718F41996FC826336B57CEDFFB0B620C8B1DE639C8BE048E2FDE6951F6431D88BF715876C68718907293176A3090E1389B76A91D6AA25A379A58
CBC85DB016B905882B6DA60587601CEBDBB371C26629CB73AC6D2EBA7FB1FD3F4B2F3E3B8D16F350D2B9B72E8D50E9CC5C6457C007C0EA8BD078900B6ABC5A3A76407341C51FE26013B5FBDD0FBF93D17BBDCBDDCBF2215E483CE9B8D81F98CD673AD6C87147B24F03753DA481E4BC526FF4CBC70C7EFCA9F3477E15FDE8EFED73CA2AAE51BD287E75DB34EF47FD0EEE1CFDB1C57E5515101F1C6533E8A6EB69975AAB3E1FBFEFC8AE0CFC4DEE4FA7EED67429F3DAB04569C34470C8431B3F2B007912784C8871A6FC1DA92ED4EE669FBF8E2262594FC0AD74EDCF8A70276EBE054A983DCCD4724100C465A84A0DA513CE9249F8DE068A8A3EA037E0CEC749C86389B4CE4CE7DF752E15544E11A9A92D1C806DAAAD163D8400E448BFCCBCF1BBBA3B8E65E1398BD956520B13DA6700E95FE4CDFE7F818EF3669682D744396D85DC26B007095D7A27EF37AB10DC048E92B1272B6E43C9E883852C4C51166C276842C834DF46DA6228715B6165DDF29FBDE01EE07E6A14A78AA1C6D86474817EA985C02CDECC1B2D947BDA9C904B7D46E6E48359017552A8FE0E3506330C5FF7260204176F96ECEA715C40C0C84A5422EE1EAB9C23A1C59A3C6894B202DB4FAEB12613D330AE32BD543B98C3F090C96FFF79BC315CC42CDF549F76498522C67F8D8DAA3262CB77A74FDD469CAF900CBEC3D6938587D5CB260F530FC0B6D12001E8DB80F6C7A4207E673274EF08AC22245AC1E26C78D53546A1CC868ADBD6EF81492D4522859367DCB8815DE6D2272496ABCDDB2010161A380AC388E21B05E8BFCF10ADE0832E5CCF595860E4C7EA8C4BD2B1E5D174F3C583F1744ED6E9133D7A5FE1D0755DAB27B30DBF2A4897EAFEB373184EE58586AC076A0DF58AC572DB73F380D2A7FF9A7D0525FE95D0E49F3C317643CEE2B34A582EEA898651B84B0EA4D13FEF8F3785F8DBADC647BA422DE9F75D4A6D427AAAA1491C959216E047517519D8DA7B5018F7BEA89FB1B2BA5906B2DCF29D1600F4CF75430FD5014E1891959454E3D29A0DF1A435D54E6EB738335A0C84AD5BE1AE955E4FE8F8B45CD706D96100201F521189F3A7AD0B8EA381A5468F099638FA0BAD63E660F57C28FE14D11AF9D25B2D4586A6940BD73AAB32C37B201ED865564412C41A2FA8E44F4B4247169127E0013FC8C30FC75165FBDE2DCB2A0943793370F6D730FDF6234E93E074FA6A6FC95CD960A99A7C267A60F1E4F9D8A23E00BF00412E6B833A1F9E6C208DB145BCFD8D6CB2A824DA66E8395D01BFC7E1D13A134BA0E163B1CEC296D3AE5E10BF2D5F6FAA7AAA9EC52621407274D76404ADD6FACF340C5B911D0CD9A95291E32F39BCB6929F38A5118ED605DCC58480C5BB0FB4993E56A626274CB39005A81E460E6FE8930461BCE8A96789C59A0A80C94AEE521EB4C8AD47F7DC7FCB838749

8729539F855C5AAE05759AD16543A2C093459EA561F73797AE6F26F273D6AADB9DBFEF43C8D72BFB1FB212DF1C429964417E48E2B492B5108A1E9C63E53E35F1888A4A9B216F3EDAE559F9146048D8FA909426DD3B59DB4B3A61C592B9BB0C800152FAD28BF08D6EB719624EAB96A1DE067CE9BDD1ED3F8BC07385CB84DF3D37DCDA731EA3656C63F17CEC63447FD7CBA676F9F0736E2943D9AB30863BF5C6C20DC8212A6CF1EAA1C2C10D05338AE4B94F3A383485A66723E038FEEE813EADB471AA75795CAB2FA0015D03CF5A608229C7FA48B5BB734F354A498677B88D5C3139ECC886DA8DF5CE2B360D62755F9EDCA66E9D68C5EF7C1FCB288CA98C6D5863431118C158394717FE6EB4CBC66E51E3B13A345028E39E59B129D78F4C0D212BE3279306E546983F113947BD4E807413E349B50B4D794CC315B5C6D9CF9C21F16B6E89155571739324407E6E4443405F55D8CD66C5E6583F92EDA4AA5A5E129588B04EE7990100600CE27BF4B7370F421DC86E908B6CA6B403185151CD96C4451334C84FE586572F24FDDB317919A5193A8425B845BCCF19D3E9C212201765078A9CB3046A0A365E2C9A2379254A3B565DFE669F172E6017C2E8826298CDC9726C4C0AB3B81CEBF241878865F6E36FB9FD3ECA20CFBF8F7DB9DB97E7C342BA719C6880CFC4DD32BAD09CC05FE30B4DE605D596061F9BD2B2F79FFBC369184EF530A4D1B7EBC32C506D33D83A6EACD4E1865F4F364E3582EED830521C136A92B03333D3A18D3BDA368B869ABB03D4D87FE1598BEFBE2F18E220553D5F51DE5F2719CFE79E0B570520424CB99EF9431492FAB5C5CC6C2B583CF5C0061002907FA0BC4181F8D2119315F5E9F163EF16124E6AEB275DB23CE0815272AB851EFF0E02B54B74E38D13C4920A03D7735379C70FF2E91CB8E507A43BD6BCDE47CF2913FE9FE1269D2CBF86EA417203E8690FC528ABA857A1C63B9D905419C33FCFC2BECF6985D96D58770E7201540C59F4AAFADE5DE1466CD18CBB2BE9CCCB8460EBBDE85A523543A4D6C693834130DBDB6B9F676C6AF5E103F5C821B5B79D8A0CB2FFED031C19478973CCF9E9079DAC63FCA3DEDC80E5DC2501BDF26109E8F86F1C825FFF20F2714087D01DD78F894F8BFDB35B337F82244906720821A91129579BEF9AC857D2A592562AE78D46DA692189FD189119D0EEDFE503AF432A9E78FC489D9C94C6FFB6AA1E3FB09B1570EAEF695EAA769D127740850FDBADC048E148BF8823CBEC39E1C7EAC3860B5A99300017A66876C73D8DE72FAB7007495D3E9A3B4391C50550E298C32055AD03023A7FD95483AFD95FFD9819D046D39A613F8AFC4D5C735609
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/MADVFE+HelveticaNeue cguidfix
/F1.1/MADVFE+HelveticaNeue renmfont
%RBIBeginFontSubset: GZUHLY+Consolas
%!FontType1-1.0: GZUHLY+Consolas 1.0000.5.3200
14 dict begin/FontName /GZUHLY+Consolas def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid4 put
dup 34 /gid13 put
dup 35 /gid15 put
dup 36 /gid14 put
dup 37 /gid2 put
dup 38 /gid25 put
dup 39 /gid28 put
dup 40 /gid18 put
dup 41 /gid16 put
dup 42 /gid30 put
dup 43 /gid12 put
dup 44 /gid11 put
dup 45 /gid6 put
dup 46 /gid29 put
dup 47 /gid3 put
dup 48 /gid8 put
dup 49 /gid10 put
dup 50 /gid5 put
dup 51 /gid17 put
dup 52 /gid9 put
dup 53 /gid23 put
dup 54 /gid20 put
dup 55 /gid21 put
dup 56 /gid7 put
dup 57 /gid26 put
dup 58 /gid22 put
dup 59 /gid1 put
dup 60 /gid19 put
dup 61 /gid24 put
dup 62 /gid27 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -885 1 index div -619 2 index div 1387 3 index div 2071 5 -1 roll div]cvx def
/sfnts [<



FC8BFE51056B00010000000000000000000000000000001F046600580466000004660085046600A00466009E0466006D046600750466005E046600AC046600B6046600AC0466005A046600A00466005C046600A0046600C9046600B60466003F046600A0046600420466003B046600A4046600EE046601850466003B046600730466015904660120046600A2046600E5046600000000004D004D009100CD00FB0130016F01F50225023E0254029502BB02F5032F0351039C03C403E803FE042A04410468048904DD04ED050105140549057E058C00010000001F013B004E0076000700020010002F00010000000000000003000100000000
00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
/gid24 24 def
/gid25 25 def
/gid26 26 def
/gid27 27 def
/gid28 28 def
/gid29 29 def
/gid30 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-885 -619 1387 2071}def
/UniqueID 4254286 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9310E889D4B294081CFBE92AFCC7FE3BB36C58496644FE561335DE1475A1726DC814F0BCC646CF31938183CF76CC8B442D48FB84210522F79C83273493BC23DFD7A758FCBEE5D7CA4582AEA4105014E8A0B2D33F234CFFC5C2990F84F8F67F9FC133B131A7910A7C210A4FCB52F76C470DD440B796D49882A509DE8A21E272BAF9381263BD7158D325D81E55ED0601E7A8479CD5DE0246D1ACF1F97CC766C274A15AF3D83613707F1D1EAA1C17B76B22B844BE0EE3EDF086B9DF56367D7427C7EEC06270F85619BDDF309E7AFB6A7759E078D491EEB2AE58131DFE2C4AD50EDC29B0F1B87EE091E6475F8C154A03BDF59A4E6E0FCF1F1778B457E813D200C9B9D06B3104FFFECF78E0DA5B3703037FAB74096B7C3083CF557EC1636F91D90A427FCB59E6C3CE8B88F5BC488FC9B8ED60176CAB9D20896CC28BFC7E101B0DB7EA37B1297BB92403478A9F6333E1B50E5C361EBA0D783D56F82FCF220C7E497113CED64177B8D696543D346B13AAEBE015843AA7681846D4DDFF818589E8E11A35E8EFB60ED9B3B69606C37A1266EE76EEE3763AA12C4C7AD4F15D06ADAE3E6B4290CE9BF6A791D30CF98BF253B9BACF641D221F9AAFC8F1264ABB811513CC79B8C9F3ABD0B9EE635A02093EAE26408D0EA726E86F5A9A02EF7326D343E255496853559928B23041A1679BA19EB83D319245B74147B38B3F5500884CD60E8F9656A00552CC42A204A558F262400EEC05A85FB7452492CDEE858B8214A89DF9EF88B4
B38180072E082D39AE06D0B2810B157F47B4EB2342F143AC3E5ACAAFFE9F8FA9A5BD301CC5830F6378184BE32EEAD1F5379EADEC7A20AB37918931DA9FD8063ED4A06BF8E6AB7E669F4A8FBF10EC2C8775C665C104ACA1E99AB3608E59C4B56F7E5B6D3D4C1ACA8C6AB8CE7A7778753C6C1D0420A202289A3B3ECCDB7970E14A5C5A8DF7AA9A021E39312F82924E78EA31578DD7EECD1381B7506A4A6B32FF9A15DF1B272DECC34B9D72CF0B42BAA640546FEF512A059D96729AE534E980535440BEA8CB6A672A40481EFFD95D8742EF8B5A65E17AF249A20A50D88B3FA64C826EEB482DC24D41C9027A78775D551F055DB8417FC71842491A13BD790582AB85DE59A23C212852E1B47F24CE448F9E50CB901E427DDB6AA23FEFB282F39AF41E89638C257B54E1573F6DC80A5084AFC09E6A56A93014D9E53218F1EC15825655C88433316DA2F27D138279E65506EFE4E04A990267F7FA059AC3D14DE768F8EA4654798124C81237860A26B7B504A81B2D703F253F77ECD4CBB55B7F181F48BF2E35FF1ABA15A5246633D449EE7F2F63E009CBC090131E42D341669529B07AAFC1827410A9080619317D9BDFAC34F583A7C11C184E9F4CA389257AF9AAAED835E92D765CA3D81039AF113DE07EB50D4FF2DF94146848E7FECBDF5D40D67B0047AE18A96E7881EAC2EB26291B49C40BD73CA8033D55AD708324332D8455B3DF25EDB69C09811DD01DCE15D51E99606DDD5B25D74090227867FEC3F4387C5CC16196CAA78ED3E8ECBE991560378C910E1E56B3A9FE660DD418FC7D3CF9C796391D520E039A0842C8D70D5ABD12C6639AC6A02A9D4AD652243D79F8F7BFDD49A9A5549C7D1ECB96D23074E23450637C2A63BB574316E8C2B63AD2D4F86F4518D18C3AD385E056F11483BEA9F4C4EB49C2154DCFE5D1ACD4CBA8E5F29355E32F49A3CAFE720215BE258982FE0584C386CB0C71983D083CF479C36608548614606DD21D1CE4398DD78B0AB659B55130953AC788C83A10A4D7ADB2C28245B202CAF70EC1DC074C3FA5E2837AAB30744D99A7B47DD0CEF9B7A22E9DA0FC57259324912910F3E1B88D6E790FF1C6A30580C1818830704C9F6A4C38E7AA8509FD53FE971A6A1364ECFA2116D8D563F730426432D8CCC30C266F25AAB63CC7EB534E434E0FAC21095A6412C95FAB2A5FDB5FC5C87670B9691FC6E7602391227553E25A61D6641713A28A84AC28376A8D96677DC52AB04DE15AD24DE58DDDB16687254AEA01AA17434A95463549F5D431C7D1B1E0F1A994A5F7FA5430BA2D7D588DB103EC5DA73A3D698A1BB667887FEE22F49EB61B33DBA67C74E886803A72E732B822462D7A7EE22509F74AD4BEC8207A1AAF937E882D45C5F50E0E537F604FD3413EAEE403D67DE00381D9CE93E3C8C585A852F5C29D679D5BBA3284F13B35535F3EF1D8
4F89CF7A10DB002BDF94B0049E80E400682A4BB2479BDFCEB13AA9739DF60241C5E86BC6996A8E76A15A7C807AA584229054075E00AC67FEFD674FEF5C08284712BD6199CBBD7E15EB2D5415D94637B093125DEFE72E67BDCD031BD5409BFBF6EFFD1D320597F2F5054EB6CCDB6D662818D7A15C9D18AC7C18D59C8560463F6C438EEC70E3BDC13ECAB6CED0B108E586F751D35ED9205B642B1933D007F7AB738E58E1E1579709DD91E5955A85AEAA511871D779285E49F789E0F127E4EC8BCFB2B08DE6AC8C0F2C1A8AB5724DE3A2EE31317C12E5C6A6F89A3FCEC468E1EB3F5132E32F7D0EB572D8139CFADA3FA9970499A34D1B6765DCCB8592EED1C725F7195CE340B6C0D218B62D8B5BE6E4F08DD20B824DFC8C330AC130EAF086896EBB53AEFDE8C194FFBB56F5EA83560A348A1D2C498B2D432D3C4B159A734A44F4692C5206C52AD7A84049E459DCBC6D19135CA9E166E80EC7E34B2EA26B38F9D3A3CB7DA1DF31CD609DB41C5F5FA42315005B53F2289AA27D87CD3AB8336A919EEEAAFE2AE71A7A363E2230C350FBCFE5F3FBD2D6EAD8E62B892F810002C83D82A3677FBC9DC59BE4C2A1EA39607DEDB366CC17757DF80E209800F606635412D3EC8B7951022923FC75B7E604C97ADC08302BF0DBE65EA3BA554E6E8F4238C6923F03934690180DFCD34C702E1D358932DEC99B12529D6415294AD465F0FBFCE789B8DF139503F8FD825129794F6CD12326DE22B853B7EE032F8D212C2C591EF5D60B2E6F3B4C15F3AE4FF67AF5674A87F81D58E1AC2FDB24DEBAAA2B3C7967E874B47B25D1A4808517F43AC41AC7BE15F068E0D160C60224948BCA4C8960F163F03C121B9324155A828C9AF580B065C913D0031EFEB2CEC7C5490FCFC274102BFDA1977E885A4AD560C2CA5F01DA74399D7A3AD9E2344F9CD80904C636D07DF62B23675DD3AC81A432FDB39DB4EB989525EA6CC522C4072C0B8E408C2C0EEECDA8CF748D4A2A62A240362E56031DACD8392B89C147682F9F2C4D26BD2078C720E1329C34B7AD257E71821BA2EAE2B91A51CFF282CBAFCB0BAF3BF80B49E7DB23659BE0A7CB6FBF0D548E8301ED2E83939A2150A758B397F6C29DD038D72E8E84569C21125418FBBD47A849A19DB7862BBFEC10640E53F2950D691652E087F6CD3CFCF82B6D75D160E3942855C25CA35C267CEC087785F318458FE7941915B1EFF18C456A2175DF22646FD5100078EA1D3A0977EE562F3C13A4BF6F851847D091DD7044045E05BBD8864ACE0B4E632BC18FEAEF08A172C4901619DCCD5FEC0EA667B20736275136885D4126B15CA0F152A5E09861EAE93B56DD3871E9CBE62962E642DBB4DD771A60A1534A91753DE068161DDE5A32D90F6F7897DE493051029A504D05F80951375F4D210CFE5D58C1D94633E0AD2DF769320DFAF2A259458D37F3
B650CF6ACE31FB63D9D8AE2AF0BFD4F98EFF1B1F816C0E222C48539385A0CC6893ECBD3C44153D991EF70546AB80B940C704767C32F00122C306AD5483DA285B002F8F9D4F4036861809C4989EF8F40A55AD6AA4407AC2044D629A001E87EC86BA6D9E9703FE6E99B24756326C676345C2DFF3D5E5C3838DBCBE5280062D7DEDC68C1601641A257214898B5CEABC9783795442471C97FD2482FB4637798CACFCBED84528C41B7C95593A7C4EB8051B28BB0CDED730A6633BEAAA63B18E899BFCBD38A8817FC1409E2B39ADDD0B30F464007078B7D8CAB661343D7844F9C3948E7034D0B19D932540F151C7978C569F65F4BBD0499196338A83C1837AB15F19DF0FDD97A112BE762FFE932D783609E2266F999C2B788B30A59753B9C132BFE84C2D1611DD9FEE5E79BC1E302AE9B892D5AFE6FCF5CE00B1E7673423190DF6AD17C3A075AE7AB8439FE75E819572793E1CB7C67440FDD98031DC8DF9AD60C196D555C7EBCFCA8A0F5BF66DCC6CF868D32230CEDA62F002D90EB017A914F39E35920A07B41B5DE530C988AF62A65B38CF6434AEFFCBEDDF547E30B46AB8FDCBC12539B35937D3E76AA4808FF3A29ED519A2B7ADA561DA61B1FB2ABC8E3BFF1079FE002B64C44106C7E852BE7F568ACD6EDB10C2D84639D83CF00350FC5AFBA12F75896F12C056A9D49250DAAC9EDCF31F558549D35FFB598D4506F109CC9404596A05D2CD5BD1CDB25888438F17C9883EEB2891AB351BB6FE182060A2F9FDBEE8AE8988D8B17827D7DB6338A2E128AEE088193EF51B09C0B97D7AD259FDD3F73488638C167603E40B62033BD03C5B1701BD2D6A39A7ED540B6B1626BDB820B5DE3235EE321615DD88DAEF5E942BD4F285C8543CCBA0F386D1293E5B2D84B0B44867E63B8A8AB6BB14255A1CFF4BC2CD3581A53E63AD21E7234DEF3E11B63B2B008533C271EF3983EBDAF9691DF76211EA72AE24D152548ADEDAB8F8030C910503761C1F5CECECE49D242B782EA11DFB94BC08C503858107623BFE9CED5E6194D548C0BDBAC2E46A4CF811C9993A736EDF4011424DED56E1336704A30B0DF791A223ED74BCE270791F67DA1F3924A9750441031B4692BCA48B76CDCB88FB9F99A51BB29FDC2162D134618EBEC7A9AD3546EFAB36644CA4A88F356C4240F70ECAE40E4CB522102EDE5C8A274C6205D50CFB896A2E0093FCA3C78601FDB3CA85FDFAA0D1C8ED39DAF684D176A0A4F543214AC357F474D093FFD0DF87C9E75E6EA61626DF0586854FB4D9DFE43A9EBEA666D8FDA8CF4E4890DFBB4F6C6620119CE80E025A6EED7EA4EFAA71D9841EF09AFA63BF70F02EEB61942C2F7EEC1030628F35B8ED8BDAC7F27CB54D5DDDA3DA71A17CB36EF42C05ACEACB82E7F40FE3F63FC69E9252AE4327BF2C9A4D18F00314F3863879D1A74F907D2D0F11ACB584932E6526
6050B0FFC51980EF760F9197ECCB18C3DFE444C7128D9C7FEC0DA624B8F59E7B20CE1DD717D51E69DCA5D07615513DAD50603AF639A3783F665CC5F1BDAB9B8D242BF33E1242A7015D55432CA31206388AA20A23A9D6E79499F6EB59A0D8C778552F27E01447B096245C76C16A32F7FDEAF2FBA1395A8208C7F8F9C6F3FE216BAC10451D478D1CFB928DA7DA780BA977EB232E2290F56011024B2759696244032F8E88318DA153A2BA3C7EE441E4C29AA16488477A290A0F145AFC660E2567E61E8C7AA964D559F9001B91EE57457A2FABCE07F3F58B818B96C4D1FDBDB5A580AD41C2987FA85D9FCB48D7A786EDA4A41A8FBC407645E725ADC937DA6DC81742D3650BAD1FA61FEFE5B094210FA0F55DF5625EE5516DEF7A8C08A39B8D67EE925CF54C2EF39DFD456ADFF5FAAF70E64EEDEF64FD5ECD732106A0FA086805DAF5BE96ED81156E8698C365D47FE0E068C4FB11E08941747CCDBCCEE6C7A52D02DFCCF04C19ED1B4B2689055AE0BE7170D868CC316113C2CDB62D9A8C559F26672106099633BA34B9BCB8B1F187BF2222143210A383D92EB488EA92E6ECD59D4EB07FF32DC2FF3C82674629CD5A80239AB718048CAD0AAB48478DEE6BA8EFC149F230C79F463511C188D5D0C08DBF23F4BBB826F6E98D0E6576D22C42082494955E14AAC82D0F021FBCA92266A6D011999D3F82806C521E8F94FBC6CEEEBDFA56D5D28C45EB03D6A1D7AA0796D180CE7A5B239E8795EB4DA2468F72340433EFDADE4F6ED67D9184FD525E3D30974CAD5DF2245B05101B39102C74BEA299EF9ACD146BE318BDC3DA3EA3CF732F2CC69D8981EA89D46C07E577EBB4ABF2698F02AEA18D28DDD0AAF2CEB93251C8C018B34BC46EC59AD4D6FEB165E9D96CF90A2A6143B506CBEF1A9749DE820632DE9A3629DC7BE4A03E7C19E2CA1681DD436FA1FA4D96F61314BC6DFC6C2EDC1BD0AFDA0260E94FAD1098DD23F7CE1CA85A33267DCE0AE26AF4502FB99CB943CB41075584ED5A960285753C0288696DEBE5B30EC00BE2D78A71FA6910B4888E0862131B0FE1CDC0CC4BB35B61973C7FC1BA40ED7487E5A47AF31449ACBA37984942B79C15D930804BAD329CA2A65831CDF3B78C23644CC3ED4190CBB1E971F7594E3B29BB2948290762FBD4A4874EE123CD2F48B6BB0965A63340272B25535FA5A80379A87A6D11E633C762C10DFFB5A8F7F14721442DF469212197A5FF92B4A560715FEBCAD968BC0F176FC7D1595EB6B98696DF932083EB8D1C4BB03A90C6ECF26211E7DF8C494F89EBD05807FB83C516481E6F464D45D2BAFE22FCABF35FAD08B84959F5C1A25C4D8AFE2888900FA54AFFF2745A52598BDF3477A4592039B9B9707C0846D0AC78296F29A8374B296EC6655A678E3EE5B87A3AE3B0720405C2BCD332758D550BA0393B9C2AB54D6AD4577C6A75B3

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/GZUHLY+Consolas cguidfix
/F2.1/GZUHLY+Consolas renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
24.573681 520.62311 m
817.30463 520.62311 l
817.30463 74.808258 l
24.573681 74.808258 l
h
W
24.573681 74.779732 792.76898 445.84341 rc
24.573681 520.62311 m
817.30463 520.62311 l
817.30463 74.808258 l
24.573681 74.808258 l
h
f
Q
q
24.573681 74.779732 792.76898 445.84341 rc
24.573681 520.62311 m
817.34271 520.62311 l
817.34271 74.779732 l
24.573681 74.779732 l
h
f
12700 w
8 M
[
38100
12700
] 0 d
0.74901962 0.74901962 0.74901962 sc
0.00006502 0 0 -0.00006501 415.08279 403.33829 cm
0 0 m
2213887 0 l
2213887 2842055 l
0 2842055 l
h
S
0.00006502 0 0 -0.00006501 236.9942 308.07791 cm
0 0 m
2565571 0 l
2565571 1376752 l
0 1376752 l
h
S
0.00006502 0 0 -0.00006501 236.99429 403.3382 cm
0 0 m
2565571 0 l
2565571 1280986 l
0 1280986 l
h
S
0.00006502 0 0 -0.00006501 75.193069 403.3382 cm
0 0 m
2281880 0 l
2281880 2842055 l
0 2842055 l
h
S
1 1 1 sc
CM
38.232948 319.39111 m
116.1707 319.39111 l
116.1707 297.70139 l
38.232948 297.70139 l
h
f
38100 w
[] 0 d
0.74901962 0.74901962 0.74901962 sc
0.00006502 0 0 -0.00006501 38.232948 319.39111 cm
0 0 m
1198606 0 l
1198606 333632 l
0 333632 l
h
S
0.057067961 0 0 0.057056539 48.402039 -142.7027 cm
/F1.1[ 262.5 0 0 262.5 0 0]sf
0 7812 m
(!"#$%"&")[ 86.835000 139.335000 197.085000 72.397500 153.772500 139.335000 81.322500 0.000000 ] xS
1 1 1 sc
CM
167.0578 352.86292 m
280.08099 352.86292 l
280.08099 329.8345 l
167.0578 329.8345 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 167.0578 352.86292 cm
0 0 m
1738185 0 l
1738185 354225 l
0 354225 l
h
S
0.057067961 0 0 0.057056539 186.0264 -109.9457 cm
0 7812 m
(#'!%$\('\)*&)[ 197.163750 150.176250 82.188750 153.851250 72.476250 139.413750 150.176250 144.663750 144.663750 0.000000 ] xS
1 1 1 sc
CM
167.0578 286.72281 m
280.08099 286.72281 l
280.08099 263.69431 l
167.0578 263.69431 l
h
f
0.74901962 0.74901962 0.74901962 sc
0.00006502 0 0 -0.00006501 167.0578 286.72281 cm
0 0 m
1738185 0 l
1738185 354225 l
0 354225 l
h
S
0.057067961 0 0 0.057056539 177.16969 -176.0304 cm
0 7812 m
(%"&"+,&$-./0)[ 153.746250 139.308750 81.296250 139.308750 130.121250 139.308750 81.296250 72.371250 135.633750 168.183750 197.058750 0.000000 ] xS
1 1 1 sc
CM
363.91089 352.86292 m
455.64191 352.86292 l
467.15851 341.3486 l
467.15851 341.3486 l
455.64191 329.8345 l
363.91089 329.8345 l
352.39441 341.3486 l
352.39441 341.3486 l
h
f
0.74901962 0.74901962 0.74901962 sc
0.00006502 0 0 -0.00006501 352.39441 352.86292 cm
177113.3 0 m
1587845 0 l
1764956 177113.5 l
1764956 177113.5 l
1587845 354225 l
177113.3 354225 l
0 177113.5 l
0 177113.5 l
h
S
0.057067961 0 0 0.057056539 379.5314 -109.9457 cm
0 7812 m
(&'1,*23,!)[ 81.401250 150.176250 135.738750 139.151250 144.663750 57.776250 124.713750 139.151250 0.000000 ] xS
1 1 1 sc
CM
363.91089 286.3212 m
455.64191 286.3212 l
467.15851 274.80701 l
467.15851 274.80701 l
455.64191 263.29279 l
363.91089 263.29279 l
352.39441 274.80701 l
352.39441 274.80701 l
h
f
0.74901962 0.74901962 0.74901962 sc
0.00006502 0 0 -0.00006501 352.39441 286.3212 cm
177113.3 0 m
1587845 0 l
1764956 177113.5 l
1764956 177113.5 l
1587845 354225 l
177113.3 354225 l
0 177113.5 l
0 177113.5 l
h
S
0.057067961 0 0 0.057056539 370.63351 -176.42979 cm
0 7812 m
(%"&"$+'\)!\(,)[ 153.746250 139.308750 81.296250 139.308750 72.371250 130.121250 150.071250 144.821250 82.083750 139.308750 0.000000 ] xS
1 1 1 sc
CM
523.26819 320.06049 m
614.99921 320.06049 l
626.5155 308.5462 l
626.5155 308.5462 l
614.99921 297.0321 l
523.26819 297.0321 l
511.75159 308.5462 l
511.75159 308.5462 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 511.75159 320.06049 cm
177113.3 0 m
1587845 0 l
1764956 177113.5 l
1764956 177113.5 l
1587845 354225 l
177113.3 354225 l
0 177113.5 l
0 177113.5 l
h
S
0.057067961 0 0 0.057056539 548.48871 -142.7027 cm
0 7812 m
(4'%,5)[ 222.495000 150.045000 153.720000 139.282500 0.000000 ] xS
0.74901962 0.74901962 0.74901962 sc
CM
116.842 307.5054 m
162.52361 336.9523 l
161.18111 339.034 l
115.4995 309.5871 l
h
162.825 334.19949 m
167.0578 341.3486 l
158.7977 340.4447 l
h
f
116.8497 309.58209 m
162.5563 279.63821 l
161.1985 277.56641 l
115.4918 307.51041 l
h
162.87801 282.3887 m
167.0578 275.20859 l
158.8046 276.17349 l
h
f
280.0809 342.5871 m
289.9906 342.5871 l
289.9906 340.1102 l
280.0809 340.1102 l
h
297.42291 342.5871 m
307.33261 342.5871 l
307.33261 340.11011 l
297.42291 340.1102 l
h
314.76471 342.5871 m
324.67429 342.58701 l
324.67429 340.11011 l
314.76471 340.11011 l
h
332.10651 342.58701 m
342.01611 342.58701 l
342.01611 340.11011 l
332.10651 340.11011 l
h
344.96219 345.0639 m
352.39441 341.3486 l
344.96219 337.63321 l
h
f
280.0878 276.4469 m
346.20801 276.0798 l
346.19421 273.60309 l
280.07401 273.97021 l
h
344.98291 278.56369 m
352.39441 274.80701 l
344.9418 271.133 l
h
f
411.01501 329.8345 m
411.01529 292.51349 l
408.53781 292.51349 l
408.53781 329.8345 l
h
413.49249 293.75201 m
409.7764 286.3212 l
406.06039 293.75201 l
h
f
0.057067961 0 0 0.057056539 81.13884 -54.646832 cm
/F2.1[ 145.8333 0 0 145.8333 0 0]sf
0 7812 m
(!"#$"#%&')[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 122.016 -54.646832 cm
0 7812 m
(!"#$\(\)*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 171.9769 -54.646832 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 81.13884 -64.405449 cm
0 7812 m
(/\(012*')[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 112.9322 -64.405449 cm
0 7812 m
(3%\)4*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 153.8093 -64.405449 cm
0 7812 m
(.*)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 162.8932 -64.405449 cm
0 7812 m
(2%3%\)-35$6)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 242.94 -54.646832 cm
0 7812 m
(3"4-+07%30"+&)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 242.94 -64.405449 cm
0 7812 m
(')s
0.057067961 0 0 0.057056539 247.48199 -64.405449 cm
0 7812 m
(3"4-+07-#*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 311.0686 -64.405449 cm
0 7812 m
(.*)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 320.1524 -64.405449 cm
0 7812 m
(3"4-+07-#5$6)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 242.94 -219.5732 cm
0 7812 m
(3%\)4\)&')[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 274.7334 -219.5732 cm
0 7812 m
(3%\)4*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 315.6105 -219.5732 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 324.69431 -219.5732 cm
0 7812 m
(2%3%*\)"\(#!-5$6)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
1 1 1 sc
CM
606.508 451.66641 m
744.59222 451.66641 l
744.59222 415.15369 l
606.508 415.15369 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 606.508 451.66641 cm
0 0 m
2123598 0 l
2123598 561641 l
0 561641 l
h
S
0.057067961 0 0 0.057056539 623.22528 -8.9924669 cm
/F1.1[ 262.5 0 0 262.5 0 0]sf
0 7812 m
(6!,&!"2*,%$#'!%$)[ 153.746250 82.083750 139.308750 81.296250 86.808750 139.308750 57.933750 144.821250 139.308750 153.746250 72.371250 197.058750 150.071250 82.083750 153.746250 0.000000 ] xS
0.057067961 0 0 0.057056539 634.31171 -26.79767 cm
0 7812 m
(,47,%%2*8+)[ 139.282500 222.495000 153.720000 139.282500 153.720000 153.720000 57.907500 144.795000 150.045000 0.000000 ] xS
1 1 1 sc
CM
606.508 382.57339 m
744.59222 382.57339 l
744.59222 346.0607 l
606.508 346.0607 l
h
f
0 0 0 sc
0.00006502 0 0 -0.00006501 606.508 382.57339 cm
0 0 m
2123598 0 l
2123598 561641 l
0 561641 l
h
S
0.057067961 0 0 0.057056539 625.56873 -78.044693 cm
0 7812 m
(,9&!"\(&,%$#'!%$)[ 139.282500 135.607500 81.532500 86.782500 139.282500 139.282500 81.532500 139.282500 153.720000 72.345000 197.032500 150.045000 82.057500 153.720000 0.000000 ] xS
0.057067961 0 0 0.057056539 634.30957 -95.90696 cm
0 7812 m
(,47,%%2*8+)[ 139.282500 222.495000 153.720000 139.282500 153.720000 153.720000 57.907500 144.795000 150.045000 0.000000 ] xS
CM
676.78882 415.15369 m
676.78882 388.76559 l
674.31158 388.76559 l
674.3114 415.15369 l
h
679.2663 390.00409 m
675.55017 382.57339 l
671.83411 390.00409 l
h
f
222.3307 352.86292 m
222.3307 365.55539 l
600.31439 365.55539 l
600.31439 363.07849 l
223.5694 363.07849 l
224.80811 364.31699 l
224.80811 352.86292 l
h
599.07581 368.03229 m
606.508 364.31699 l
599.07581 360.60159 l
h
f
676.78882 346.0607 m
676.78882 307.3078 l
632.70911 307.3078 l
632.70911 309.7847 l
675.55017 309.7847 l
674.3114 308.5463 l
674.3114 346.0607 l
h
633.94788 304.8309 m
626.51581 308.5463 l
633.94788 312.2616 l
h
f
12700 w
[
38100
12700
] 0 d
0.00006502 0 0 -0.00006501 564.34448 479.1806 cm
0 0 m
2935419 0 l
2935419 2297254 l
0 2297254 l
h
S
0.057067961 0 0 0.057056539 570.29028 22.62318 cm
/F2.1[ 145.8333 0 0 145.8333 0 0]sf
0 7812 m
(!"#$"#%)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 602.08362 22.62318 cm
0 7812 m
(&')[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 611.1673 22.62318 cm
0 7812 m
(!"#$\(\)*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 661.12817 22.62318 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 570.29028 12.92163 cm
0 7812 m
(8-3)[ 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 583.91602 12.92163 cm
0 7812 m
(*$#-3#%0+-2*-,/-220+85$6)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.74901962 0.74901962 0.74901962 sc
CM
467.89249 342.34619 m
507.49701 313.2135 l
506.0289 311.21841 l
466.4245 340.3511 l
h
507.96729 315.9425 m
511.75159 308.5462 l
503.5629 309.95721 l
h
f
0.057067961 0 0 0.057056539 468.9426 -212.4968 cm
0 7812 m
(3%\)4\))[ 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 491.6521 -212.4968 cm
0 7812 m
(&')[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 500.73611 -212.4968 cm
0 7812 m
(3%\)4*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 541.61322 -212.4968 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 468.9426 -222.2554 cm
0 7812 m
(9)s
0.057067961 0 0 0.057056539 473.4845 -222.2554 cm
0 7812 m
(3#%0+:;)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 505.2778 -222.2554 cm
0 7812 m
(-<%1)[ 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 523.44562 -222.2554 cm
0 7812 m
(:;=>5)[ 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 546.15509 -222.2554 cm
0 7812 m
($6)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 468.9426 -188.47121 cm
0 7812 m
(,"2-1)[ 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 491.6521 -188.47121 cm
0 7812 m
(&')[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 500.7359 -188.47121 cm
0 7812 m
(3%\)4*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 541.61292 -188.47121 cm
0 7812 m
(.&)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 468.9426 -198.1727 cm
0 7812 m
(')s
0.057067961 0 0 0.057056539 473.4845 -198.1727 cm
0 7812 m
(,"2-1*+%,-)[ 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 518.90338 -198.1727 cm
0 7812 m
(.5)[ 79.581232 0.000000 ] xS
0.057067961 0 0 0.057056539 527.98718 -198.1727 cm
0 7812 m
($6)[ 79.581232 0.000000 ] xS
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%EOF
